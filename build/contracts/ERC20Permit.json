{
  "contractName": "ERC20Permit",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/phillipe/ralie-token/ralie-token/contracts/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/phillipe/ralie-token/ralie-token/contracts/Context.sol\":{\"keccak256\":\"0x1a1e6a1efcdca26d6b070fb109077412cd601a741ae657a1fd4ee59a5814d0fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://871f8a47850d37718e50575a85235e9f3e95d56b0fb93c3acf3b568d797196f1\",\"dweb:/ipfs/QmeiqSPx96vo3X8PyPrhT8u3w61WS1ksj3RjqwPx1ysECS\"]},\"/home/phillipe/ralie-token/ralie-token/contracts/Counters.sol\":{\"keccak256\":\"0xdb38285259d71451a0247838701bfa06ba020f12c1ff5ebc7594219906b9b0ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c14c37e7c01f93ddece9a83c5b533496b203a5c74f7747c75f76df833afe204f\",\"dweb:/ipfs/QmU6PUMX8SQDZUAT57RBaju7WMwMeuE3K4FnuSv1fY6m7n\"]},\"/home/phillipe/ralie-token/ralie-token/contracts/ECDSA.sol\":{\"keccak256\":\"0x9f0fac6c7183e948e216cb5e104126935c241b037d430781520731b75cb0724b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46dcf11ff57eaf50cdbec4f7ff047e066db172cb5edb819724d791e68a09fef2\",\"dweb:/ipfs/QmWCfW2QUyhN32kJ1irsuLe3NYgzbeWUEvskgfKTYisKWE\"]},\"/home/phillipe/ralie-token/ralie-token/contracts/EIP712.sol\":{\"keccak256\":\"0x620375063e6005d07b49bc2b821e873207de6a24bac71a13a8bbd75c8561ddd9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ca4d01ee80799be4bf912a56afc8dd21c964ffd226c5b6bd109a809a6d520b5\",\"dweb:/ipfs/QmS4m4DCQTT3G2349pUd65YCkA7r7rRssTXqki2vPCqZCL\"]},\"/home/phillipe/ralie-token/ralie-token/contracts/ERC20.sol\":{\"keccak256\":\"0xe3435f897bc848a9ab2e23dd9ab1dc812ba807023406c6368f1d590990ddd9cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b09f061dd69917993e37ff09cd96af601043cc845b5f38bf2dc5985b5b09dd81\",\"dweb:/ipfs/QmZyeAvzMhSJXEXJ2mHmbLjwpvN38V1GF8hg9rZLfg9pQk\"]},\"/home/phillipe/ralie-token/ralie-token/contracts/ERC20Permit.sol\":{\"keccak256\":\"0xe81c6c7efd20a34f4b7439c77fa4e2b7668f629112454b2022f4e5ed6bb3603d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4586bec22b8ee1438e61774505b71ae3c01ab1ebbd4116bfb43a6a304667836\",\"dweb:/ipfs/QmQ19HN9ZmqLgkpGrvGAnb9uUZnnZQRikuCQcjfGn525tm\"]},\"/home/phillipe/ralie-token/ralie-token/contracts/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"/home/phillipe/ralie-token/ralie-token/contracts/IERC20Permit.sol\":{\"keccak256\":\"0x0c2f2d20aaf35ed78ebd5472d53705a7bb4194d404204e1eac22e8e1bac65aec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2a7c2bf08a06123cf78e795720652fa87f24771a735a701efc6d05483a960f0b\",\"dweb:/ipfs/QmZ99EP1f7v9xmnf8MXiWs4NEJ3fyjjnVbChE9JeasfB1S\"]},\"/home/phillipe/ralie-token/ralie-token/contracts/SafeMath.sol\":{\"keccak256\":\"0x3b21f2c8d626de3b9925ae33e972d8bf5c8b1bffb3f4ee94daeed7d0679036e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f8d45329fecbf0836ad7543330c3ecd0f8d0ffa42d4016278c3eb2215fdcdfe\",\"dweb:/ipfs/QmXWLT7GcnHtA5NiD6MFi2CV3EWJY4wv5mLNnypqYDrxL3\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"./ERC20.sol\";\nimport \"./Counters.sol\";\nimport \"./IERC20Permit.sol\";\nimport \"./ECDSA.sol\";\nimport \"./EIP712.sol\";\n\n\n// An adapted copy of https://github.com/OpenZeppelin/openzeppelin-contracts/blob/ecc66719bd7681ed4eb8bf406f89a7408569ba9b/contracts/drafts/ERC20Permit.sol\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712 {\n    using Counters for Counters.Counter;\n\n    mapping (address => Counters.Counter) private _nonces;\n\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private immutable _PERMIT_TYPEHASH = keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev See {IERC20Permit-permit}.\n     */\n    function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public virtual override {\n        // solhint-disable-next-line not-rely-on-time\n        require(block.timestamp <= deadline, \"ERC20Permit: expired deadline\");\n\n        bytes32 structHash = keccak256(\n            abi.encode(\n                _PERMIT_TYPEHASH,\n                owner,\n                spender,\n                value,\n                _nonces[owner].current(),\n                deadline\n            )\n        );\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        require(signer == owner, \"ERC20Permit: invalid signature\");\n\n        _nonces[owner].increment();\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @dev See {IERC20Permit-nonces}.\n     */\n    function nonces(address owner) public view override returns (uint256) {\n        return _nonces[owner].current();\n    }\n\n    /**\n     * @dev See {IERC20Permit-DOMAIN_SEPARATOR}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view override returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n",
  "sourcePath": "/home/phillipe/ralie-token/ralie-token/contracts/ERC20Permit.sol",
  "ast": {
    "absolutePath": "/home/phillipe/ralie-token/ralie-token/contracts/ERC20Permit.sol",
    "exportedSymbols": {
      "Context": [
        1549
      ],
      "Counters": [
        1599
      ],
      "ECDSA": [
        1715
      ],
      "EIP712": [
        1862
      ],
      "ERC20": [
        2365
      ],
      "ERC20Permit": [
        2500
      ],
      "IERC20": [
        2578
      ],
      "IERC20Permit": [
        2614
      ],
      "SafeMath": [
        3441
      ]
    },
    "id": 2501,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2367,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:31:16"
      },
      {
        "absolutePath": "/home/phillipe/ralie-token/ralie-token/contracts/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 2368,
        "nodeType": "ImportDirective",
        "scope": 2501,
        "sourceUnit": 2366,
        "src": "66:21:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/phillipe/ralie-token/ralie-token/contracts/Counters.sol",
        "file": "./Counters.sol",
        "id": 2369,
        "nodeType": "ImportDirective",
        "scope": 2501,
        "sourceUnit": 1600,
        "src": "88:24:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/phillipe/ralie-token/ralie-token/contracts/IERC20Permit.sol",
        "file": "./IERC20Permit.sol",
        "id": 2370,
        "nodeType": "ImportDirective",
        "scope": 2501,
        "sourceUnit": 2615,
        "src": "113:28:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/phillipe/ralie-token/ralie-token/contracts/ECDSA.sol",
        "file": "./ECDSA.sol",
        "id": 2371,
        "nodeType": "ImportDirective",
        "scope": 2501,
        "sourceUnit": 1716,
        "src": "142:21:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/phillipe/ralie-token/ralie-token/contracts/EIP712.sol",
        "file": "./EIP712.sol",
        "id": 2372,
        "nodeType": "ImportDirective",
        "scope": 2501,
        "sourceUnit": 1863,
        "src": "164:22:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 2374,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2365,
              "src": "867:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$2365",
                "typeString": "contract ERC20"
              }
            },
            "id": 2375,
            "nodeType": "InheritanceSpecifier",
            "src": "867:5:16"
          },
          {
            "baseName": {
              "id": 2376,
              "name": "IERC20Permit",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2614,
              "src": "874:12:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Permit_$2614",
                "typeString": "contract IERC20Permit"
              }
            },
            "id": 2377,
            "nodeType": "InheritanceSpecifier",
            "src": "874:12:16"
          },
          {
            "baseName": {
              "id": 2378,
              "name": "EIP712",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1862,
              "src": "888:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EIP712_$1862",
                "typeString": "contract EIP712"
              }
            },
            "id": 2379,
            "nodeType": "InheritanceSpecifier",
            "src": "888:6:16"
          }
        ],
        "contractDependencies": [
          1549,
          1862,
          2365,
          2578,
          2614
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 2373,
          "nodeType": "StructuredDocumentation",
          "src": "346:487:16",
          "text": " @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
        },
        "fullyImplemented": false,
        "id": 2500,
        "linearizedBaseContracts": [
          2500,
          1862,
          2614,
          2365,
          2578,
          1549
        ],
        "name": "ERC20Permit",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2382,
            "libraryName": {
              "id": 2380,
              "name": "Counters",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1599,
              "src": "907:8:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Counters_$1599",
                "typeString": "library Counters"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "901:36:16",
            "typeName": {
              "id": 2381,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1559,
              "src": "920:16:16",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$1559_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "id": 2386,
            "mutability": "mutable",
            "name": "_nonces",
            "nodeType": "VariableDeclaration",
            "scope": 2500,
            "src": "943:53:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$1559_storage_$",
              "typeString": "mapping(address => struct Counters.Counter)"
            },
            "typeName": {
              "id": 2385,
              "keyType": {
                "id": 2383,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "952:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "943:37:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$1559_storage_$",
                "typeString": "mapping(address => struct Counters.Counter)"
              },
              "valueType": {
                "id": 2384,
                "name": "Counters.Counter",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1559,
                "src": "963:16:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Counter_$1559_storage_ptr",
                  "typeString": "struct Counters.Counter"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2391,
            "mutability": "immutable",
            "name": "_PERMIT_TYPEHASH",
            "nodeType": "VariableDeclaration",
            "scope": 2500,
            "src": "1055:140:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 2387,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1055:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529",
                  "id": 2389,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1110:84:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
                    "typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
                  },
                  "value": "Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
                    "typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
                  }
                ],
                "id": 2388,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1100:9:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 2390,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1100:95:16",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "baseFunctions": [
              2599
            ],
            "body": {
              "id": 2471,
              "nodeType": "Block",
              "src": "1393:658:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2411,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1465:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 2412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1465:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 2413,
                          "name": "deadline",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2400,
                          "src": "1484:8:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1465:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332305065726d69743a206578706972656420646561646c696e65",
                        "id": 2415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1494:31:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd",
                          "typeString": "literal_string \"ERC20Permit: expired deadline\""
                        },
                        "value": "ERC20Permit: expired deadline"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd",
                          "typeString": "literal_string \"ERC20Permit: expired deadline\""
                        }
                      ],
                      "id": 2410,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1457:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1457:69:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2417,
                  "nodeType": "ExpressionStatement",
                  "src": "1457:69:16"
                },
                {
                  "assignments": [
                    2419
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2419,
                      "mutability": "mutable",
                      "name": "structHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 2471,
                      "src": "1537:18:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2418,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1537:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2435,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2423,
                            "name": "_PERMIT_TYPEHASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2391,
                            "src": "1609:16:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 2424,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2394,
                            "src": "1643:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2425,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2396,
                            "src": "1666:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2426,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2398,
                            "src": "1691:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "baseExpression": {
                                  "id": 2427,
                                  "name": "_nonces",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2386,
                                  "src": "1714:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$1559_storage_$",
                                    "typeString": "mapping(address => struct Counters.Counter storage ref)"
                                  }
                                },
                                "id": 2429,
                                "indexExpression": {
                                  "id": 2428,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2394,
                                  "src": "1722:5:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1714:14:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Counter_$1559_storage",
                                  "typeString": "struct Counters.Counter storage ref"
                                }
                              },
                              "id": 2430,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "current",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1570,
                              "src": "1714:22:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1559_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1559_storage_ptr_$",
                                "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                              }
                            },
                            "id": 2431,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1714:24:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2432,
                            "name": "deadline",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2400,
                            "src": "1756:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2421,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1581:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "1581:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1581:197:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2420,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1558:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1558:230:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1537:251:16"
                },
                {
                  "assignments": [
                    2437
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2437,
                      "mutability": "mutable",
                      "name": "hash",
                      "nodeType": "VariableDeclaration",
                      "scope": 2471,
                      "src": "1799:12:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2436,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1799:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2441,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2439,
                        "name": "structHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2419,
                        "src": "1831:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 2438,
                      "name": "_hashTypedDataV4",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1854,
                      "src": "1814:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32) view returns (bytes32)"
                      }
                    },
                    "id": 2440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1814:28:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1799:43:16"
                },
                {
                  "assignments": [
                    2443
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2443,
                      "mutability": "mutable",
                      "name": "signer",
                      "nodeType": "VariableDeclaration",
                      "scope": 2471,
                      "src": "1853:14:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2442,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1853:7:16",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2451,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2446,
                        "name": "hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2437,
                        "src": "1884:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2447,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2402,
                        "src": "1890:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 2448,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2404,
                        "src": "1893:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2449,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2406,
                        "src": "1896:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 2444,
                        "name": "ECDSA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1715,
                        "src": "1870:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ECDSA_$1715_$",
                          "typeString": "type(library ECDSA)"
                        }
                      },
                      "id": 2445,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "recover",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1697,
                      "src": "1870:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 2450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1870:28:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1853:45:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2453,
                          "name": "signer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2443,
                          "src": "1916:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2454,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2394,
                          "src": "1926:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1916:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332305065726d69743a20696e76616c6964207369676e6174757265",
                        "id": 2456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1933:32:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124",
                          "typeString": "literal_string \"ERC20Permit: invalid signature\""
                        },
                        "value": "ERC20Permit: invalid signature"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124",
                          "typeString": "literal_string \"ERC20Permit: invalid signature\""
                        }
                      ],
                      "id": 2452,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1908:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1908:58:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2458,
                  "nodeType": "ExpressionStatement",
                  "src": "1908:58:16"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "baseExpression": {
                          "id": 2459,
                          "name": "_nonces",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2386,
                          "src": "1977:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$1559_storage_$",
                            "typeString": "mapping(address => struct Counters.Counter storage ref)"
                          }
                        },
                        "id": 2461,
                        "indexExpression": {
                          "id": 2460,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2394,
                          "src": "1985:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1977:14:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1559_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2462,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1582,
                      "src": "1977:24:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1559_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1559_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 2463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1977:26:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2464,
                  "nodeType": "ExpressionStatement",
                  "src": "1977:26:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2466,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2394,
                        "src": "2022:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2467,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2396,
                        "src": "2029:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2468,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2398,
                        "src": "2038:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2465,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2342,
                      "src": "2013:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2013:31:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2470,
                  "nodeType": "ExpressionStatement",
                  "src": "2013:31:16"
                }
              ]
            },
            "documentation": {
              "id": 2392,
              "nodeType": "StructuredDocumentation",
              "src": "1202:50:16",
              "text": " @dev See {IERC20Permit-permit}."
            },
            "functionSelector": "d505accf",
            "id": 2472,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "permit",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2408,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1384:8:16"
            },
            "parameters": {
              "id": 2407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2394,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 2472,
                  "src": "1273:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2393,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1273:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2396,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 2472,
                  "src": "1288:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2395,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1288:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2398,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2472,
                  "src": "1305:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2397,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1305:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2400,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nodeType": "VariableDeclaration",
                  "scope": 2472,
                  "src": "1320:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2399,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1320:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2402,
                  "mutability": "mutable",
                  "name": "v",
                  "nodeType": "VariableDeclaration",
                  "scope": 2472,
                  "src": "1338:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2401,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1338:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2404,
                  "mutability": "mutable",
                  "name": "r",
                  "nodeType": "VariableDeclaration",
                  "scope": 2472,
                  "src": "1347:9:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2403,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1347:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2406,
                  "mutability": "mutable",
                  "name": "s",
                  "nodeType": "VariableDeclaration",
                  "scope": 2472,
                  "src": "1358:9:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2405,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1358:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1272:96:16"
            },
            "returnParameters": {
              "id": 2409,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1393:0:16"
            },
            "scope": 2500,
            "src": "1257:794:16",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2607
            ],
            "body": {
              "id": 2487,
              "nodeType": "Block",
              "src": "2182:48:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "baseExpression": {
                          "id": 2481,
                          "name": "_nonces",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2386,
                          "src": "2199:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$1559_storage_$",
                            "typeString": "mapping(address => struct Counters.Counter storage ref)"
                          }
                        },
                        "id": 2483,
                        "indexExpression": {
                          "id": 2482,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2475,
                          "src": "2207:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2199:14:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1559_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 2484,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1570,
                      "src": "2199:22:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1559_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1559_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 2485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2199:24:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2480,
                  "id": 2486,
                  "nodeType": "Return",
                  "src": "2192:31:16"
                }
              ]
            },
            "documentation": {
              "id": 2473,
              "nodeType": "StructuredDocumentation",
              "src": "2057:50:16",
              "text": " @dev See {IERC20Permit-nonces}."
            },
            "functionSelector": "7ecebe00",
            "id": 2488,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nonces",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2477,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2155:8:16"
            },
            "parameters": {
              "id": 2476,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2475,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 2488,
                  "src": "2128:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2474,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2128:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2127:15:16"
            },
            "returnParameters": {
              "id": 2480,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2479,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2488,
                  "src": "2173:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2478,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2173:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2172:9:16"
            },
            "scope": 2500,
            "src": "2112:118:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2613
            ],
            "body": {
              "id": 2498,
              "nodeType": "Block",
              "src": "2423:44:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2495,
                      "name": "_domainSeparatorV4",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1808,
                      "src": "2440:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
                        "typeString": "function () view returns (bytes32)"
                      }
                    },
                    "id": 2496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2440:20:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 2494,
                  "id": 2497,
                  "nodeType": "Return",
                  "src": "2433:27:16"
                }
              ]
            },
            "documentation": {
              "id": 2489,
              "nodeType": "StructuredDocumentation",
              "src": "2236:60:16",
              "text": " @dev See {IERC20Permit-DOMAIN_SEPARATOR}."
            },
            "functionSelector": "3644e515",
            "id": 2499,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "DOMAIN_SEPARATOR",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2491,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2396:8:16"
            },
            "parameters": {
              "id": 2490,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2379:2:16"
            },
            "returnParameters": {
              "id": 2494,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2493,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2499,
                  "src": "2414:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2492,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2414:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2413:9:16"
            },
            "scope": 2500,
            "src": "2354:113:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2501,
        "src": "834:1635:16"
      }
    ],
    "src": "33:2437:16"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/home/phillipe/ralie-token/ralie-token/contracts/ERC20Permit.sol",
      "exportedSymbols": {
        "Context": [
          1549
        ],
        "Counters": [
          1599
        ],
        "ECDSA": [
          1715
        ],
        "EIP712": [
          1862
        ],
        "ERC20": [
          2365
        ],
        "ERC20Permit": [
          2500
        ],
        "IERC20": [
          2578
        ],
        "IERC20Permit": [
          2614
        ],
        "SafeMath": [
          3441
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.6",
            ".0",
            "<",
            "0.8",
            ".0"
          ]
        },
        "id": 2367,
        "name": "PragmaDirective",
        "src": "33:31:16"
      },
      {
        "attributes": {
          "SourceUnit": 2366,
          "absolutePath": "/home/phillipe/ralie-token/ralie-token/contracts/ERC20.sol",
          "file": "./ERC20.sol",
          "scope": 2501,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 2368,
        "name": "ImportDirective",
        "src": "66:21:16"
      },
      {
        "attributes": {
          "SourceUnit": 1600,
          "absolutePath": "/home/phillipe/ralie-token/ralie-token/contracts/Counters.sol",
          "file": "./Counters.sol",
          "scope": 2501,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 2369,
        "name": "ImportDirective",
        "src": "88:24:16"
      },
      {
        "attributes": {
          "SourceUnit": 2615,
          "absolutePath": "/home/phillipe/ralie-token/ralie-token/contracts/IERC20Permit.sol",
          "file": "./IERC20Permit.sol",
          "scope": 2501,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 2370,
        "name": "ImportDirective",
        "src": "113:28:16"
      },
      {
        "attributes": {
          "SourceUnit": 1716,
          "absolutePath": "/home/phillipe/ralie-token/ralie-token/contracts/ECDSA.sol",
          "file": "./ECDSA.sol",
          "scope": 2501,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 2371,
        "name": "ImportDirective",
        "src": "142:21:16"
      },
      {
        "attributes": {
          "SourceUnit": 1863,
          "absolutePath": "/home/phillipe/ralie-token/ralie-token/contracts/EIP712.sol",
          "file": "./EIP712.sol",
          "scope": 2501,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 2372,
        "name": "ImportDirective",
        "src": "164:22:16"
      },
      {
        "attributes": {
          "abstract": true,
          "contractDependencies": [
            1549,
            1862,
            2365,
            2578,
            2614
          ],
          "contractKind": "contract",
          "fullyImplemented": false,
          "linearizedBaseContracts": [
            2500,
            1862,
            2614,
            2365,
            2578,
            1549
          ],
          "name": "ERC20Permit",
          "scope": 2501
        },
        "children": [
          {
            "attributes": {
              "text": " @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
            },
            "id": 2373,
            "name": "StructuredDocumentation",
            "src": "346:487:16"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "ERC20",
                  "referencedDeclaration": 2365,
                  "type": "contract ERC20"
                },
                "id": 2374,
                "name": "UserDefinedTypeName",
                "src": "867:5:16"
              }
            ],
            "id": 2375,
            "name": "InheritanceSpecifier",
            "src": "867:5:16"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "IERC20Permit",
                  "referencedDeclaration": 2614,
                  "type": "contract IERC20Permit"
                },
                "id": 2376,
                "name": "UserDefinedTypeName",
                "src": "874:12:16"
              }
            ],
            "id": 2377,
            "name": "InheritanceSpecifier",
            "src": "874:12:16"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "EIP712",
                  "referencedDeclaration": 1862,
                  "type": "contract EIP712"
                },
                "id": 2378,
                "name": "UserDefinedTypeName",
                "src": "888:6:16"
              }
            ],
            "id": 2379,
            "name": "InheritanceSpecifier",
            "src": "888:6:16"
          },
          {
            "children": [
              {
                "attributes": {
                  "name": "Counters",
                  "referencedDeclaration": 1599,
                  "type": "library Counters"
                },
                "id": 2380,
                "name": "UserDefinedTypeName",
                "src": "907:8:16"
              },
              {
                "attributes": {
                  "name": "Counters.Counter",
                  "referencedDeclaration": 1559,
                  "type": "struct Counters.Counter"
                },
                "id": 2381,
                "name": "UserDefinedTypeName",
                "src": "920:16:16"
              }
            ],
            "id": 2382,
            "name": "UsingForDirective",
            "src": "901:36:16"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "_nonces",
              "scope": 2500,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => struct Counters.Counter)",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => struct Counters.Counter)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 2383,
                    "name": "ElementaryTypeName",
                    "src": "952:7:16"
                  },
                  {
                    "attributes": {
                      "name": "Counters.Counter",
                      "referencedDeclaration": 1559,
                      "type": "struct Counters.Counter"
                    },
                    "id": 2384,
                    "name": "UserDefinedTypeName",
                    "src": "963:16:16"
                  }
                ],
                "id": 2385,
                "name": "Mapping",
                "src": "943:37:16"
              }
            ],
            "id": 2386,
            "name": "VariableDeclaration",
            "src": "943:53:16"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "immutable",
              "name": "_PERMIT_TYPEHASH",
              "scope": 2500,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "bytes32",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "bytes32",
                  "type": "bytes32"
                },
                "id": 2387,
                "name": "ElementaryTypeName",
                "src": "1055:7:16"
              },
              {
                "attributes": {
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "isStructConstructorCall": false,
                  "lValueRequested": false,
                  "names": [
                    null
                  ],
                  "tryCall": false,
                  "type": "bytes32",
                  "type_conversion": false
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
                          "typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
                        }
                      ],
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": -8,
                      "type": "function (bytes memory) pure returns (bytes32)",
                      "value": "keccak256"
                    },
                    "id": 2388,
                    "name": "Identifier",
                    "src": "1100:9:16"
                  },
                  {
                    "attributes": {
                      "hexvalue": "5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "string",
                      "type": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\"",
                      "value": "Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"
                    },
                    "id": 2389,
                    "name": "Literal",
                    "src": "1110:84:16"
                  }
                ],
                "id": 2390,
                "name": "FunctionCall",
                "src": "1100:95:16"
              }
            ],
            "id": 2391,
            "name": "VariableDeclaration",
            "src": "1055:140:16"
          },
          {
            "attributes": {
              "baseFunctions": [
                2599
              ],
              "functionSelector": "d505accf",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "permit",
              "scope": 2500,
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev See {IERC20Permit-permit}."
                },
                "id": 2392,
                "name": "StructuredDocumentation",
                "src": "1202:50:16"
              },
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 2408,
                "name": "OverrideSpecifier",
                "src": "1384:8:16"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "owner",
                      "scope": 2472,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2393,
                        "name": "ElementaryTypeName",
                        "src": "1273:7:16"
                      }
                    ],
                    "id": 2394,
                    "name": "VariableDeclaration",
                    "src": "1273:13:16"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "spender",
                      "scope": 2472,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2395,
                        "name": "ElementaryTypeName",
                        "src": "1288:7:16"
                      }
                    ],
                    "id": 2396,
                    "name": "VariableDeclaration",
                    "src": "1288:15:16"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "value",
                      "scope": 2472,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2397,
                        "name": "ElementaryTypeName",
                        "src": "1305:7:16"
                      }
                    ],
                    "id": 2398,
                    "name": "VariableDeclaration",
                    "src": "1305:13:16"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "deadline",
                      "scope": 2472,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2399,
                        "name": "ElementaryTypeName",
                        "src": "1320:7:16"
                      }
                    ],
                    "id": 2400,
                    "name": "VariableDeclaration",
                    "src": "1320:16:16"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "v",
                      "scope": 2472,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint8",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint8",
                          "type": "uint8"
                        },
                        "id": 2401,
                        "name": "ElementaryTypeName",
                        "src": "1338:5:16"
                      }
                    ],
                    "id": 2402,
                    "name": "VariableDeclaration",
                    "src": "1338:7:16"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "r",
                      "scope": 2472,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 2403,
                        "name": "ElementaryTypeName",
                        "src": "1347:7:16"
                      }
                    ],
                    "id": 2404,
                    "name": "VariableDeclaration",
                    "src": "1347:9:16"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "s",
                      "scope": 2472,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 2405,
                        "name": "ElementaryTypeName",
                        "src": "1358:7:16"
                      }
                    ],
                    "id": 2406,
                    "name": "VariableDeclaration",
                    "src": "1358:9:16"
                  }
                ],
                "id": 2407,
                "name": "ParameterList",
                "src": "1272:96:16"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2409,
                "name": "ParameterList",
                "src": "1393:0:16"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd",
                                  "typeString": "literal_string \"ERC20Permit: expired deadline\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 2410,
                            "name": "Identifier",
                            "src": "1457:7:16"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "<=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "timestamp",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -4,
                                      "type": "block",
                                      "value": "block"
                                    },
                                    "id": 2411,
                                    "name": "Identifier",
                                    "src": "1465:5:16"
                                  }
                                ],
                                "id": 2412,
                                "name": "MemberAccess",
                                "src": "1465:15:16"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2400,
                                  "type": "uint256",
                                  "value": "deadline"
                                },
                                "id": 2413,
                                "name": "Identifier",
                                "src": "1484:8:16"
                              }
                            ],
                            "id": 2414,
                            "name": "BinaryOperation",
                            "src": "1465:27:16"
                          },
                          {
                            "attributes": {
                              "hexvalue": "45524332305065726d69743a206578706972656420646561646c696e65",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"ERC20Permit: expired deadline\"",
                              "value": "ERC20Permit: expired deadline"
                            },
                            "id": 2415,
                            "name": "Literal",
                            "src": "1494:31:16"
                          }
                        ],
                        "id": 2416,
                        "name": "FunctionCall",
                        "src": "1457:69:16"
                      }
                    ],
                    "id": 2417,
                    "name": "ExpressionStatement",
                    "src": "1457:69:16"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        2419
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "structHash",
                          "scope": 2471,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bytes32",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bytes32",
                              "type": "bytes32"
                            },
                            "id": 2418,
                            "name": "ElementaryTypeName",
                            "src": "1537:7:16"
                          }
                        ],
                        "id": 2419,
                        "name": "VariableDeclaration",
                        "src": "1537:18:16"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "bytes32",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": -8,
                              "type": "function (bytes memory) pure returns (bytes32)",
                              "value": "keccak256"
                            },
                            "id": 2420,
                            "name": "Identifier",
                            "src": "1558:9:16"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "bytes memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "encode",
                                  "type": "function () pure returns (bytes memory)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -1,
                                      "type": "abi",
                                      "value": "abi"
                                    },
                                    "id": 2421,
                                    "name": "Identifier",
                                    "src": "1581:3:16"
                                  }
                                ],
                                "id": 2422,
                                "name": "MemberAccess",
                                "src": "1581:10:16"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2391,
                                  "type": "bytes32",
                                  "value": "_PERMIT_TYPEHASH"
                                },
                                "id": 2423,
                                "name": "Identifier",
                                "src": "1609:16:16"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2394,
                                  "type": "address",
                                  "value": "owner"
                                },
                                "id": 2424,
                                "name": "Identifier",
                                "src": "1643:5:16"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2396,
                                  "type": "address",
                                  "value": "spender"
                                },
                                "id": 2425,
                                "name": "Identifier",
                                "src": "1666:7:16"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2398,
                                  "type": "uint256",
                                  "value": "value"
                                },
                                "id": 2426,
                                "name": "Identifier",
                                "src": "1691:5:16"
                              },
                              {
                                "attributes": {
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "current",
                                      "referencedDeclaration": 1570,
                                      "type": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct Counters.Counter storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 2386,
                                              "type": "mapping(address => struct Counters.Counter storage ref)",
                                              "value": "_nonces"
                                            },
                                            "id": 2427,
                                            "name": "Identifier",
                                            "src": "1714:7:16"
                                          },
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 2394,
                                              "type": "address",
                                              "value": "owner"
                                            },
                                            "id": 2428,
                                            "name": "Identifier",
                                            "src": "1722:5:16"
                                          }
                                        ],
                                        "id": 2429,
                                        "name": "IndexAccess",
                                        "src": "1714:14:16"
                                      }
                                    ],
                                    "id": 2430,
                                    "name": "MemberAccess",
                                    "src": "1714:22:16"
                                  }
                                ],
                                "id": 2431,
                                "name": "FunctionCall",
                                "src": "1714:24:16"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2400,
                                  "type": "uint256",
                                  "value": "deadline"
                                },
                                "id": 2432,
                                "name": "Identifier",
                                "src": "1756:8:16"
                              }
                            ],
                            "id": 2433,
                            "name": "FunctionCall",
                            "src": "1581:197:16"
                          }
                        ],
                        "id": 2434,
                        "name": "FunctionCall",
                        "src": "1558:230:16"
                      }
                    ],
                    "id": 2435,
                    "name": "VariableDeclarationStatement",
                    "src": "1537:251:16"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        2437
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "hash",
                          "scope": 2471,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bytes32",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bytes32",
                              "type": "bytes32"
                            },
                            "id": 2436,
                            "name": "ElementaryTypeName",
                            "src": "1799:7:16"
                          }
                        ],
                        "id": 2437,
                        "name": "VariableDeclaration",
                        "src": "1799:12:16"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "bytes32",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1854,
                              "type": "function (bytes32) view returns (bytes32)",
                              "value": "_hashTypedDataV4"
                            },
                            "id": 2438,
                            "name": "Identifier",
                            "src": "1814:16:16"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2419,
                              "type": "bytes32",
                              "value": "structHash"
                            },
                            "id": 2439,
                            "name": "Identifier",
                            "src": "1831:10:16"
                          }
                        ],
                        "id": 2440,
                        "name": "FunctionCall",
                        "src": "1814:28:16"
                      }
                    ],
                    "id": 2441,
                    "name": "VariableDeclarationStatement",
                    "src": "1799:43:16"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        2443
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "signer",
                          "scope": 2471,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 2442,
                            "name": "ElementaryTypeName",
                            "src": "1853:7:16"
                          }
                        ],
                        "id": 2443,
                        "name": "VariableDeclaration",
                        "src": "1853:14:16"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "address",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "recover",
                              "referencedDeclaration": 1697,
                              "type": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1715,
                                  "type": "type(library ECDSA)",
                                  "value": "ECDSA"
                                },
                                "id": 2444,
                                "name": "Identifier",
                                "src": "1870:5:16"
                              }
                            ],
                            "id": 2445,
                            "name": "MemberAccess",
                            "src": "1870:13:16"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2437,
                              "type": "bytes32",
                              "value": "hash"
                            },
                            "id": 2446,
                            "name": "Identifier",
                            "src": "1884:4:16"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2402,
                              "type": "uint8",
                              "value": "v"
                            },
                            "id": 2447,
                            "name": "Identifier",
                            "src": "1890:1:16"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2404,
                              "type": "bytes32",
                              "value": "r"
                            },
                            "id": 2448,
                            "name": "Identifier",
                            "src": "1893:1:16"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2406,
                              "type": "bytes32",
                              "value": "s"
                            },
                            "id": 2449,
                            "name": "Identifier",
                            "src": "1896:1:16"
                          }
                        ],
                        "id": 2450,
                        "name": "FunctionCall",
                        "src": "1870:28:16"
                      }
                    ],
                    "id": 2451,
                    "name": "VariableDeclarationStatement",
                    "src": "1853:45:16"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124",
                                  "typeString": "literal_string \"ERC20Permit: invalid signature\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 2452,
                            "name": "Identifier",
                            "src": "1908:7:16"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2443,
                                  "type": "address",
                                  "value": "signer"
                                },
                                "id": 2453,
                                "name": "Identifier",
                                "src": "1916:6:16"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2394,
                                  "type": "address",
                                  "value": "owner"
                                },
                                "id": 2454,
                                "name": "Identifier",
                                "src": "1926:5:16"
                              }
                            ],
                            "id": 2455,
                            "name": "BinaryOperation",
                            "src": "1916:15:16"
                          },
                          {
                            "attributes": {
                              "hexvalue": "45524332305065726d69743a20696e76616c6964207369676e6174757265",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"ERC20Permit: invalid signature\"",
                              "value": "ERC20Permit: invalid signature"
                            },
                            "id": 2456,
                            "name": "Literal",
                            "src": "1933:32:16"
                          }
                        ],
                        "id": 2457,
                        "name": "FunctionCall",
                        "src": "1908:58:16"
                      }
                    ],
                    "id": 2458,
                    "name": "ExpressionStatement",
                    "src": "1908:58:16"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "increment",
                              "referencedDeclaration": 1582,
                              "type": "function (struct Counters.Counter storage pointer)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Counters.Counter storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2386,
                                      "type": "mapping(address => struct Counters.Counter storage ref)",
                                      "value": "_nonces"
                                    },
                                    "id": 2459,
                                    "name": "Identifier",
                                    "src": "1977:7:16"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2394,
                                      "type": "address",
                                      "value": "owner"
                                    },
                                    "id": 2460,
                                    "name": "Identifier",
                                    "src": "1985:5:16"
                                  }
                                ],
                                "id": 2461,
                                "name": "IndexAccess",
                                "src": "1977:14:16"
                              }
                            ],
                            "id": 2462,
                            "name": "MemberAccess",
                            "src": "1977:24:16"
                          }
                        ],
                        "id": 2463,
                        "name": "FunctionCall",
                        "src": "1977:26:16"
                      }
                    ],
                    "id": 2464,
                    "name": "ExpressionStatement",
                    "src": "1977:26:16"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2342,
                              "type": "function (address,address,uint256)",
                              "value": "_approve"
                            },
                            "id": 2465,
                            "name": "Identifier",
                            "src": "2013:8:16"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2394,
                              "type": "address",
                              "value": "owner"
                            },
                            "id": 2466,
                            "name": "Identifier",
                            "src": "2022:5:16"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2396,
                              "type": "address",
                              "value": "spender"
                            },
                            "id": 2467,
                            "name": "Identifier",
                            "src": "2029:7:16"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2398,
                              "type": "uint256",
                              "value": "value"
                            },
                            "id": 2468,
                            "name": "Identifier",
                            "src": "2038:5:16"
                          }
                        ],
                        "id": 2469,
                        "name": "FunctionCall",
                        "src": "2013:31:16"
                      }
                    ],
                    "id": 2470,
                    "name": "ExpressionStatement",
                    "src": "2013:31:16"
                  }
                ],
                "id": 2471,
                "name": "Block",
                "src": "1393:658:16"
              }
            ],
            "id": 2472,
            "name": "FunctionDefinition",
            "src": "1257:794:16"
          },
          {
            "attributes": {
              "baseFunctions": [
                2607
              ],
              "functionSelector": "7ecebe00",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "nonces",
              "scope": 2500,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev See {IERC20Permit-nonces}."
                },
                "id": 2473,
                "name": "StructuredDocumentation",
                "src": "2057:50:16"
              },
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 2477,
                "name": "OverrideSpecifier",
                "src": "2155:8:16"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "owner",
                      "scope": 2488,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2474,
                        "name": "ElementaryTypeName",
                        "src": "2128:7:16"
                      }
                    ],
                    "id": 2475,
                    "name": "VariableDeclaration",
                    "src": "2128:13:16"
                  }
                ],
                "id": 2476,
                "name": "ParameterList",
                "src": "2127:15:16"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 2488,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2478,
                        "name": "ElementaryTypeName",
                        "src": "2173:7:16"
                      }
                    ],
                    "id": 2479,
                    "name": "VariableDeclaration",
                    "src": "2173:7:16"
                  }
                ],
                "id": 2480,
                "name": "ParameterList",
                "src": "2172:9:16"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 2480
                    },
                    "children": [
                      {
                        "attributes": {
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "current",
                              "referencedDeclaration": 1570,
                              "type": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Counters.Counter storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2386,
                                      "type": "mapping(address => struct Counters.Counter storage ref)",
                                      "value": "_nonces"
                                    },
                                    "id": 2481,
                                    "name": "Identifier",
                                    "src": "2199:7:16"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2475,
                                      "type": "address",
                                      "value": "owner"
                                    },
                                    "id": 2482,
                                    "name": "Identifier",
                                    "src": "2207:5:16"
                                  }
                                ],
                                "id": 2483,
                                "name": "IndexAccess",
                                "src": "2199:14:16"
                              }
                            ],
                            "id": 2484,
                            "name": "MemberAccess",
                            "src": "2199:22:16"
                          }
                        ],
                        "id": 2485,
                        "name": "FunctionCall",
                        "src": "2199:24:16"
                      }
                    ],
                    "id": 2486,
                    "name": "Return",
                    "src": "2192:31:16"
                  }
                ],
                "id": 2487,
                "name": "Block",
                "src": "2182:48:16"
              }
            ],
            "id": 2488,
            "name": "FunctionDefinition",
            "src": "2112:118:16"
          },
          {
            "attributes": {
              "baseFunctions": [
                2613
              ],
              "functionSelector": "3644e515",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "DOMAIN_SEPARATOR",
              "scope": 2500,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev See {IERC20Permit-DOMAIN_SEPARATOR}."
                },
                "id": 2489,
                "name": "StructuredDocumentation",
                "src": "2236:60:16"
              },
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 2491,
                "name": "OverrideSpecifier",
                "src": "2396:8:16"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2490,
                "name": "ParameterList",
                "src": "2379:2:16"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 2499,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 2492,
                        "name": "ElementaryTypeName",
                        "src": "2414:7:16"
                      }
                    ],
                    "id": 2493,
                    "name": "VariableDeclaration",
                    "src": "2414:7:16"
                  }
                ],
                "id": 2494,
                "name": "ParameterList",
                "src": "2413:9:16"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 2494
                    },
                    "children": [
                      {
                        "attributes": {
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "bytes32",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1808,
                              "type": "function () view returns (bytes32)",
                              "value": "_domainSeparatorV4"
                            },
                            "id": 2495,
                            "name": "Identifier",
                            "src": "2440:18:16"
                          }
                        ],
                        "id": 2496,
                        "name": "FunctionCall",
                        "src": "2440:20:16"
                      }
                    ],
                    "id": 2497,
                    "name": "Return",
                    "src": "2433:27:16"
                  }
                ],
                "id": 2498,
                "name": "Block",
                "src": "2423:44:16"
              }
            ],
            "id": 2499,
            "name": "FunctionDefinition",
            "src": "2354:113:16"
          }
        ],
        "id": 2500,
        "name": "ContractDefinition",
        "src": "834:1635:16"
      }
    ],
    "id": 2501,
    "name": "SourceUnit",
    "src": "33:2437:16"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.4+commit.3f05b770.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-02-21T20:25:40.267Z",
  "devdoc": {
    "details": "Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
    "kind": "dev",
    "methods": {
      "DOMAIN_SEPARATOR()": {
        "details": "See {IERC20Permit-DOMAIN_SEPARATOR}."
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "nonces(address)": {
        "details": "See {IERC20Permit-nonces}."
      },
      "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
        "details": "See {IERC20Permit-permit}."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}